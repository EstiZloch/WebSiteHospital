#pragma checksum "F:\Hospital\Hospital\Pages\AddDepartment.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ad92a1f64d9f3918c42f95a83c47dff3f1524c7e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Hospital.Pages.Pages_AddDepartment), @"mvc.1.0.razor-page", @"/Pages/AddDepartment.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/AddDepartment.cshtml", typeof(Hospital.Pages.Pages_AddDepartment), null)]
namespace Hospital.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\Hospital\Hospital\Pages\_ViewImports.cshtml"
using Hospital;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ad92a1f64d9f3918c42f95a83c47dff3f1524c7e", @"/Pages/AddDepartment.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3d6098626ba32ebedbbbd3b16a27c11bc77ef90", @"/Pages/_ViewImports.cshtml")]
    public class Pages_AddDepartment : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "F:\Hospital\Hospital\Pages\AddDepartment.cshtml"
   ViewData["Page"] = "Add";
    List<Department> dep = data.SELECTDepartment();
    var max = dep.Max(p => p.codeDepartment)+1;
    

#line default
#line hidden
            BeginContext(146, 203, true);
            WriteLiteral("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n<div id=\"tytle\">  הוספת מחלקה</div>\r\n<div id=\"inputDiv\">\r\n\r\n    <div>\r\n        <div>קוד מחלקה</div>\r\n        <input type=\"number\"");
            EndContext();
            BeginWriteAttribute("min", " min=\"", 349, "\"", 359, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddDepartment.cshtml"
WriteAttributeValue("", 355, max, 355, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(360, 28, true);
            WriteLiteral(" id=\"codeDe\" class=\"textbox\"");
            EndContext();
            BeginWriteAttribute("value", "  value=\"", 388, "\"", 401, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddDepartment.cshtml"
WriteAttributeValue("", 397, max, 397, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("max", " max=\"", 402, "\"", 412, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddDepartment.cshtml"
WriteAttributeValue("", 408, max, 408, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(413, 1573, true);
            WriteLiteral(@"/>
    </div>
    <div>
        <div>שם מחלקה</div>
        <input type=""text"" id=""nameDe"" class=""textbox"" />
    </div>
</div>
<div id=""divmessege""><span id=""messege""></span></div>
<div id=""linkbtn"">
    <div id=""btn"">
        <div id=""Add"">הוספה</div>
        <div id=""deleteAll"">נקה הכל</div>
    </div>
    <a href=""Department"" id=""links"">&lArr;חזרה </a>
</div>
<script>
    document.getElementById(""deleteAll"").addEventListener('click', function (e) {
        var req = new XMLHttpRequest();
        req.open('GET', 'API/Departments/', true);
        req.onload = function () {
            location.reload();
            document.getElementById(""codeDe"").value = req.responseText;
            document.getElementById(""codeDe"").min = req.responseText;
            document.getElementById(""codeDe"").max = req.responseText;
        }
        req.send();
    });
    document.getElementById('Add').addEventListener('click', function (e) {
        var data = {};
        data['codeDepartment'] =");
            WriteLiteral(@" document.getElementById('codeDe').value;
        data['nameDepartment'] = document.getElementById('nameDe').value;
        var req = new XMLHttpRequest();
        req.open('POST', 'API/Departments/AddDepartment', true);
        req.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        req.onload = function () {
            //  var data = JSON.parse(req.responseText);
            document.getElementById('messege').innerHTML = req.responseText;
        }
        req.send(JSON.stringify(data));
    });
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_AddDepartment> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_AddDepartment> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_AddDepartment>)PageContext?.ViewData;
        public Pages_AddDepartment Model => ViewData.Model;
    }
}
#pragma warning restore 1591
