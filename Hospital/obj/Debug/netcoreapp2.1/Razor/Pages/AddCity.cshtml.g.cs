#pragma checksum "F:\Hospital\Hospital\Pages\AddCity.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "1a2302d4aa0dc1a1b1cf6281ac31feb6f690cc82"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(Hospital.Pages.Pages_AddCity), @"mvc.1.0.razor-page", @"/Pages/AddCity.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/AddCity.cshtml", typeof(Hospital.Pages.Pages_AddCity), null)]
namespace Hospital.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "F:\Hospital\Hospital\Pages\_ViewImports.cshtml"
using Hospital;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"1a2302d4aa0dc1a1b1cf6281ac31feb6f690cc82", @"/Pages/AddCity.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"b3d6098626ba32ebedbbbd3b16a27c11bc77ef90", @"/Pages/_ViewImports.cshtml")]
    public class Pages_AddCity : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 2 "F:\Hospital\Hospital\Pages\AddCity.cshtml"
   ViewData["Page"] = "Add";
    List<City> cities = data.SELECTCity();
    var max = cities.Max(p => p.codeCity) + 1;

#line default
#line hidden
            BeginContext(132, 199, true);
            WriteLiteral("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n<div id=\"tytle\"> הוספת ערים</div>\r\n<div id=\"inputDiv\">\r\n\r\n    <div>\r\n        <div>קוד עיר</div>\r\n        <input type=\"number\"");
            EndContext();
            BeginWriteAttribute("min", " min=\"", 331, "\"", 341, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddCity.cshtml"
WriteAttributeValue("", 337, max, 337, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(342, 30, true);
            WriteLiteral(" id=\"codeCity\" class=\"textbox\"");
            EndContext();
            BeginWriteAttribute("value", " value=\"", 372, "\"", 384, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddCity.cshtml"
WriteAttributeValue("", 380, max, 380, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginWriteAttribute("max", " max=\"", 385, "\"", 395, 1);
#line 12 "F:\Hospital\Hospital\Pages\AddCity.cshtml"
WriteAttributeValue("", 391, max, 391, 4, false);

#line default
#line hidden
            EndWriteAttribute();
            BeginContext(396, 1532, true);
            WriteLiteral(@" />
    </div>
    <div>
        <div>שם עיר</div>
        <input type=""text"" id=""nameCity"" class=""textbox"" />
    </div>
</div>
<div id=""divmessege""><span id=""messege""></span></div>
<div id=""linkbtn"">
    <div id=""btn"">
        <div id=""Add"">הוספה</div>
        <div id=""deleteAll"">נקה הכל</div>
    </div>
    <a href=""City"" id=""links"">&lArr;חזרה </a>
</div>
<script>
    document.getElementById(""deleteAll"").addEventListener('click', function (e) {
        var req = new XMLHttpRequest();
        req.open('GET', 'API/Cities/', true);
        req.onload = function () {
            location.reload();
            document.getElementById(""codeCity"").value = Number(req.responseText) + 1;
            document.getElementById(""codeCity"").min = Number(req.responseText) + 1;
            document.getElementById(""codeCity"").max = Number(req.responseText) + 1;
        }
        req.send();
    });
    document.getElementById('Add').addEventListener('click', function (e) {
        var data = {};
");
            WriteLiteral(@"        data['codeCity'] = document.getElementById('codeCity').value;
        data['nameCity'] = document.getElementById('nameCity').value;
        var req = new XMLHttpRequest();
        req.open('POST', 'API/Cities/AddCity', true);
        req.setRequestHeader('Content-Type', 'application/json; charset=utf-8');
        req.onload = function () {
            document.getElementById('messege').innerHTML = req.responseText;
        }
        req.send(JSON.stringify(data));
    });
</script>

");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<Pages_AddCity> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_AddCity> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<Pages_AddCity>)PageContext?.ViewData;
        public Pages_AddCity Model => ViewData.Model;
    }
}
#pragma warning restore 1591
